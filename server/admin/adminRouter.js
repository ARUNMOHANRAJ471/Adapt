'use strict';
const logger = require('./../../applogger');
const router = require('express').Router();
const {user} = require('../users/userEntity');
const adminCtrl = require('./adminController');
router.post('/resetPassword',adminCtrl.resetPassword);
router.post('/addNewDomain',adminCtrl.addNewDomain);
router.post('/deleteDomain',adminCtrl.deleteDomain);
router.post('/findAllScenarios',adminCtrl.findAllScenarios);
router.post('/addNewComponent',adminCtrl.addNewComponent);
router.post('/deleteComponent',adminCtrl.deleteComponent);
router.post('/viewComponentDetails',adminCtrl.viewComponentDetails);
router.post('/addUser',adminCtrl.addUser);
router.get('/getUsers',adminCtrl.getUsers);
router.post('/deleteUser',adminCtrl.deleteUser);
router.get('/getAllDomain',adminCtrl.getAllDomain);
router.post('/viewDomainDetails',adminCtrl.viewDomainDetails);
router.post('/updateComponent',adminCtrl.updateComponent);
router.post('/addUser',adminCtrl.addUser);
router.get('/getUsers',adminCtrl.getUsers);
router.post('/deleteUser',adminCtrl.deleteUser);
router.post('/updateDomain',adminCtrl.updateDomain);
router.post('/deleteUser',adminCtrl.deleteUser);
router.post('/getCorrectSequence',adminCtrl.getCorrectSequence);
router.post('/findUserData',adminCtrl.findUserData);
router.post('/updateUser',adminCtrl.updateUser);
router.post('/updateComponent',adminCtrl.updateComponent);
router.post('/findDomainScenario',adminCtrl.findDomainScenario);
router.post('/linkScenario',adminCtrl.linkScenario);
router.post('/findDelinkScenario',adminCtrl.findDelinkScenario);
router.post('/delinkScenario',adminCtrl.delinkScenario);
router.get('/adminDashboardCompletedScenario',adminCtrl.adminDashboardCompletedScenario);
router.post('/toggleDomain',adminCtrl.toggleDomain);
router.get('/adminDashboardTotalScenario',adminCtrl.adminDashboardTotalScenario);
router.get('/adminDashboardTotalDomain',adminCtrl.adminDashboardTotalDomain)
router.post('/domainsCompletedByUser',adminCtrl.domainsCompletedByUser);
router.get('/fetchCompletedDomain',adminCtrl.fetchCompletedDomain);
router.get('/fetchScores',adminCtrl.fetchScores);
router.get('/teamStats',adminCtrl.teamStats);
router.post('/masterReset',adminCtrl.masterReset);
router.post('/getusertype',adminCtrl.getusertype);
router.get('/getAllTeams',adminCtrl.getAllTeams);
router.post('/UserPickedScenarios',adminCtrl.UserPickedScenarios);
router.get('/sessionNames',adminCtrl.sessionNames);
router.post('/sessionWiseTeams',adminCtrl.sessionWiseTeams);
router.post('/sessionWiseTeamScores',adminCtrl.sessionWiseTeamScores);
module.exports = router;
